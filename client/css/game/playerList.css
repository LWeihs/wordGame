:root {
  /* color of elements in varying states */
  --player-color-odd: white;
  --player-color-even: #f2f2f2;
  --player-color-defeated: #808080;
  --player-color-background: #a6a6a6;
  /* font information */
  --player-font-family: serif;
  --player-font-size: 14px;
  /* regular border style of player (div) list elements */
  --player-border-width: 1px;
  --player-border-color: black;
  /* border style of selected player (div) list elements */
  --player-border-width-selected: 3px;
  --player-border-color-selected: red;
  /* move crown image a slight bit into room leader name text div */
  --player-crown-inset: 4px;
}

/* flow container elements as column */
div#players {
  display: flex;
  flex-direction: column;
  min-height: 0;
  min-width: 0;
}

/* flow player elements as column */
div#player-items {
  overflow: auto;
  max-height: 100%;
  min-height: 0;
  min-width: 0;
}

/* dynamically created (div) list elements */
div#player-items > div.player-item-container {
  width: 100%;
  box-sizing: border-box;
  background-color: var(--player-color-odd);
  /* content flows as row (also centers text for free elements) */
  display: flex;
  /* general border rule: fill right and top */
  border-style: solid;
  border-color: var(--player-border-color);
  border-width: var(--player-border-width) var(--player-border-width) 0 0;
  /* font styles (to inherit by children) */
  font-family: var(--player-font-family);
  font-size: var(--player-font-size);
}

/* multiple possible children for container that all fill it */
div#player-items > div.player-item-container > div {
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

/* every second list element has different background */
div#player-items > div:nth-child(2n) {
  background-color: var(--player-color-even);
}

/* current player is identified by class */
div#player-items div.filled-player-item.current-player {
  border: var(--player-border-width-selected) solid var(--player-border-color-selected);
}

/* make space in filled player item if no border is set */
div#player-items div.filled-player-item:not(.current-player) {
  padding: var(--player-border-width-selected);
}

/* remove top border from div after the one representing the current player */
div.player-item-container .current-player + div {
  border-top-width: 0;
  background-color: blue;
}

/* defeated players are identified by class */
div#player-items div.player-item-container > div.defeated {
  background-color: var(--player-color-defeated);
}

/* styles for unfilled player items */
div.unfilled-player-item {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* styles for (different parts of) filled player items */
div.filled-player-item {
  display: flex;
}
/* name tag, team tag below it (as column) and crown above it (room lead, absolute position)*/
div.filled-player-item > div.name-tag-wrap {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
div.filled-player-item > div.name-tag-wrap > div.player-name-tag {
  position: relative;
  /* contains both text(s) and crown. anchor crown by column flex-direction and center text */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}
div.filled-player-item > div.name-tag-wrap > div.player-name-tag img {
  position: absolute; /* in reference to name tag */
  bottom: calc(100% - var(--player-crown-inset));
}
div.filled-player-item > div.name-tag-wrap > div.player-team-tag {
  display: flex;
  justify-content: center;
  align-items: center;
}
div.filled-player-item > div.name-tag-wrap > div.player-team-tag > form input {
  height: 100%;
  margin-left: 0.5em;
  text-align: center;
  box-sizing: border-box;
  border: 1px solid black;
}
/* status wrap: show picture of ready/not ready status */
div.filled-player-item > div.player-status-wrap {
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}
/* win tracker wrap: show picture of trophy and number wins next to it */
div.filled-player-item > div.win-tacker-wrap {
  display: flex;
  align-items: center;
}

/* remaining space after all player elements */
div#remaining-space {
  /* finish border of last list element. Is removed when current player class is applied */
  border-top: var(--player-border-width) solid var(--player-border-color);
  border-right: var(--player-border-width) solid var(--player-border-color);
  flex-grow: 1;
}